{"version":3,"sources":["components/Products/Products.module.css","components/common/Modal/Modal.module.css","components/common/ThemeSwitcher/ThemeSwitcher.module.css","components/Filter/Filter.module.css","components/ModalProduct/ModalProduct.module.css","components/ModalChange/ModalChange.module.css","components/Shop/Shop.module.css","redux/products/productsAction.js","redux/products/productsReducer.js","redux/Store.js","context/themecontext.js","services/Api.js","components/ModalProduct/ModalProduct.jsx","components/Filter/Filter.jsx","components/Products/Products.jsx","components/common/Modal/Modal.jsx","components/ModalChange/ModalChange.jsx","components/common/ThemeSwitcher/ThemeSwitcher.jsx","components/Shop/Shop.jsx","components/App/App.jsx","index.js"],"names":["module","exports","setProducts","createAction","addProduct","editProduct","deleteProduct","changeFilter","itemsReducer","createReducer","builder","addCase","_","action","payload","state","map","product","id","filter","filterReducer","productsReducer","combineReducers","items","logger","createLogger","timestamp","collapsed","getState","logEntry","error","productsConfig","key","storage","whitelist","store","configureStore","reducer","products","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","persistor","persistStore","themes","ThemeContext","createContext","theme","toggleTheme","BASE_URL","fetchData","path","a","options","fetch","res","ok","json","Promise","reject","Error","statusText","saveItem","endpoint","item","finalOptions","method","body","JSON","stringify","headers","editItem","deleteItem","INITIAL_STATE","name","count","weight","width","height","comments","isFullTime","ModalProduct","onCloseForm","editProductModal","onNewProduct","changeProductName","useState","formData","setFormData","setProduct","setName","isModalEditOpen","setIsModalEditOpen","dispatch","useSelector","useDispatch","useEffect","addNewProduct","Api","newProducts","handleChange","e","target","value","type","checked","isCheckBox","nanoid","reset","className","s","title","form","onSubmit","preventDefault","htmlFor","label","placeholder","required","onChange","input","hight","check","btnModal","text","button","onClick","Filter","Products","handleBtnChange","allProducts","allPro","toLowerCase","includes","main","length","alert","maimItem","icon","Modal","children","onEscPress","code","window","addEventListener","removeEventListener","backdrop","currentTarget","modal","header","closeBtn","ModalChange","onDelete","onEdit","btn","ThemeSwitcher","useContext","css","container","switch","slider","round","API_ANDPOINT","Shop","isFormOpen","setIsFormOpen","isChangeFormOpen","setIsChangeFormOpen","idChange","setIdChange","activeProduct","setActiveProduct","editProductS","setEditProductS","setProducts1","onEditProducts","newEditProduct","deleteProd","toggleForm","prevIsFormopen","noProducts","lightTheme","darkTheme","changeProd","newProduct","App","setTheme","console","log","Provider","prevTheme","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.db8ab1eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Products_item__yZU4h\",\"title\":\"Products_title__1gtAW\",\"main\":\"Products_main__3TKS3\",\"maimItem\":\"Products_maimItem__3Oorv\",\"icon\":\"Products_icon__2Ge-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3v0tS\",\"modal\":\"Modal_modal__3q2YW\",\"header\":\"Modal_header__t_iDW\",\"closeBtn\":\"Modal_closeBtn__1JGcx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThemeSwitcher_container__2L0w8\",\"switch\":\"ThemeSwitcher_switch__1A373\",\"slider\":\"ThemeSwitcher_slider__2EwPQ\",\"round\":\"ThemeSwitcher_round__3gydp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\",\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ModalProduct_content__2NvNF\",\"lead\":\"ModalProduct_lead__3rYA4\",\"imageWrapper\":\"ModalProduct_imageWrapper__39p4_\",\"form\":\"ModalProduct_form__2N1Zt\",\"btnModal\":\"ModalProduct_btnModal__3Pd-n\",\"label\":\"ModalProduct_label__3QYLU\",\"input\":\"ModalProduct_input__3Str8\",\"title\":\"ModalProduct_title__26IIa\",\"check\":\"ModalProduct_check__7yNAO\",\"button\":\"ModalProduct_button__3AO-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ModalChange_item__VNF5m\",\"btn\":\"ModalChange_btn__1YeD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightTheme\":\"Shop_lightTheme__AsPOJ\",\"darkTheme\":\"Shop_darkTheme__3BLcY\"};","// import { TYPE } from \"./productsTypes\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst setProducts = createAction(\"products/items_set\");\nconst addProduct = createAction(\"products/items_add\");\nconst editProduct = createAction(\"products/items_edit\");\nconst deleteProduct = createAction(\"products/items_delete\");\nconst changeFilter = createAction(\"products/filter_change\");\n\n/////////// без библиотеки toolkit//////////\n\n// const setProducts = (products) => ({\n//   type: TYPE.SET,\n//   payload: products,\n// });\n\n// const addProduct = (product) => ({\n//   type: TYPE.ADD,\n//   payload: product,\n// });\n\n// const editProduct = (product) => ({\n//   type: TYPE.EDIT,\n//   payload: product,\n// });\n\n// const deleteProduct = (id) => ({\n//   type: TYPE.DELETE,\n//   payload: id,\n// });\n// const changeFilter = (value) => ({\n//   type: TYPE.FILTER,\n//   payload: value,\n// });\n\nexport { setProducts, addProduct, editProduct, deleteProduct, changeFilter };\n","// import { combineReducers } from \"redux\";\n// import { TYPE } from \"./productsTypes\";\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  setProducts,\n  addProduct,\n  editProduct,\n  deleteProduct,\n  changeFilter,\n} from \"./productsAction\";\n\nconst itemsReducer = createReducer([], (builder) => {\n  builder\n    .addCase(setProducts, (_, action) => action.payload)\n    .addCase(addProduct, (state, action) => [...state, action.payload])\n    .addCase(editProduct, (state, action) =>\n      state.map((product) =>\n        product.id === action.payload.id ? action.payload : product\n      )\n    )\n    .addCase(deleteProduct, (state, action) =>\n      state.filter((product) => product.id !== action.payload.id)\n    );\n});\n\nconst filterReducer = createReducer(\"\", (builder) => {\n  builder.addCase(changeFilter, (state, action) => action.payload);\n});\n\n/////////// без библиотеки toolkit//////////\n\n// const itemsReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case TYPE.SET:\n//       return action.payload;\n\n//     case TYPE.ADD:\n//       return [...state, action.payload];\n\n//     case TYPE.EDIT:\n//       return state.map((product) =>\n//         product.id === action.payload.id ? action.payload : product\n//       );\n\n//     case TYPE.DELETE:\n//       return state.filter((product) => product.id !== action.payload.id);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = \"\", action) => {\n//   switch (action.type) {\n//     case TYPE.FILTER:\n//       return action.payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst productsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default productsReducer;\n","// import { createStore, combineReducers } from \"redux\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport productsReducer from \"./products/productsReducer\";\n\nconst logger = createLogger({\n  timestamp: false,\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n});\n\nconst productsConfig = {\n  key: \"filter\",\n  storage,\n  whitelist: \" filter\",\n};\n\nconst store = configureStore({\n  reducer: {\n    products: persistReducer(productsConfig, productsReducer),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nconst persistor = persistStore(store);\n/////////// без библиотеки toolkit//////////\n\n// const rootReducer = combineReducers({\n//   products: productsReducer,\n// });\n\n// const store = createStore(rootReducer, devToolsEnhancer());\n\nexport { store, persistor };\n","import { createContext } from \"react\";\n\nconst themes = {\n  light: \"light\",\n  dark: \"dark\",\n};\n\nconst ThemeContext = createContext({\n  theme: themes.light,\n  toggleTheme: () => {},\n});\nexport { ThemeContext, themes };\n","const BASE_URL = \"https://61c4aa46f1af4a0017d9972f.mockapi.io\";\n\nconst fetchData = async (path, options = {}) => {\n  const res = await fetch(`${BASE_URL}/${path}`, options);\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst getData = (endpoint, options) => fetchData(endpoint, options);\n\nconst saveItem = (endpoint, item, options = {}) => {\n  const finalOptions = {\n    method: \"POST\",\n\n    body: JSON.stringify(item),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n  return fetchData(endpoint, finalOptions);\n};\n\nconst editItem = (endpoint, item, options = {}) => {\n  const finalOptions = {\n    method: \"PUT\",\n    body: JSON.stringify(item),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n\n  return fetchData(`${endpoint}/${item.id}`, finalOptions);\n};\n\nconst deleteItem = (endpoint, id, options = {}) =>\n  fetchData(`${endpoint}/${id}`, { method: \"DELETE\", ...options });\n\nexport { getData, saveItem, editItem, deleteItem };\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setProducts, addProduct } from \"../../redux/products/productsAction\";\nimport * as Api from \"services/Api\";\n\nimport s from \"./ModalProduct.module.css\";\n\nimport { nanoid } from \"nanoid\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  count: \"\",\n  weight: \"\",\n  width: \"\",\n  height: \"\",\n  comments: \"\",\n  isFullTime: false,\n};\n\nconst API_ANDPOINT = \"products\";\n\nconst ModalProduct = ({\n  onCloseForm,\n  onNewProduct,\n  editProductModal,\n  changeProductName,\n}) => {\n  const [formData, setFormData] = useState({ ...INITIAL_STATE });\n  const [product, setProduct] = useState(null);\n\n  const [name, setName] = useState(\"\");\n  const [isModalEditOpen, setIsModalEditOpen] = useState(() =>\n    editProductModal ? true : false\n  );\n  const allProducts = useSelector((state) => state.products.items);\n  const dispatch = useDispatch();\n\n  /////add/////\n\n  useEffect(() => {\n    if (!product) return;\n    const addNewProduct = async () => {\n      const newProducts = await Api.saveItem(API_ANDPOINT, product);\n      dispatch(addProduct(newProducts));\n      // onNewProduct(newProducts);\n      setProduct(null);\n      onCloseForm();\n    };\n    addNewProduct();\n  }, [dispatch, product]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setProduct(formData);\n    reset();\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const isCheckBox = type === \"checkbox\";\n    setFormData({\n      ...formData,\n      [name]: isCheckBox ? checked : value,\n      id: nanoid(),\n    });\n  };\n\n  const reset = () => {\n    setFormData({ ...INITIAL_STATE });\n  };\n\n  // /////Edit ////////\n\n  useEffect(() => {\n    if (!editProductModal) return;\n\n    setIsModalEditOpen(true);\n    setName(editProductModal.name);\n  }, [editProductModal]);\n\n  const handleEdit = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault();\n    changeProductName(name);\n    setIsModalEditOpen(false);\n    setName(\"\");\n    onCloseForm();\n  };\n\n  return (\n    <div>\n      <h2 className={s.title}>\n        {!isModalEditOpen\n          ? \"Main information about product\"\n          : \"Edit product name\"}\n      </h2>\n\n      {!isModalEditOpen && (\n        <form action=\"\" className={s.form} onSubmit={handleSubmit}>\n          <label htmlFor=\"\" className={s.label}>\n            name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              placeholder=\"input name product\"\n              required\n              onChange={handleChange}\n              className={s.input}\n            />\n          </label>\n          <label htmlFor=\"\" className={s.label}>\n            count\n            <input\n              type=\"number\"\n              name=\"count\"\n              value={formData.count}\n              placeholder=\"input count\"\n              required\n              onChange={handleChange}\n              className={s.input}\n            />\n          </label>\n          <label htmlFor=\"\" className={s.label}>\n            weight\n            <input\n              type=\"number\"\n              name=\"weight\"\n              value={formData.weight}\n              placeholder=\"input weight\"\n              required\n              onChange={handleChange}\n              className={s.input}\n            />\n          </label>\n          <div>\n            <label htmlFor=\"\" className={s.label}>\n              width\n              <input\n                type=\"number\"\n                name=\"width\"\n                value={formData.width}\n                placeholder=\"input width\"\n                required\n                onChange={handleChange}\n                className={s.input}\n              />\n            </label>\n            <label htmlFor=\"\" className={s.label}>\n              hight\n              <input\n                type=\"number\"\n                name=\"hight\"\n                value={formData.hight}\n                placeholder=\"input hight\"\n                required\n                onChange={handleChange}\n                className={s.input}\n              />\n            </label>\n          </div>\n          <label htmlFor=\"\" className={s.label}>\n            comments\n            <input\n              type=\"text\"\n              name=\"comments\"\n              value={formData.comments}\n              placeholder=\"input comments\"\n              onChange={handleChange}\n              className={s.input}\n            />\n          </label>\n          <div className={s.check}>\n            <p> I'am stuff of this company</p>\n            <input\n              name=\"isFullTime\"\n              type=\"checkbox\"\n              checked={formData.isFullTime}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className={s.btnModal}>\n            <button type=\"submit\" text=\"Confirm\" className={s.button}>\n              Confirm\n            </button>\n            <button\n              type=\"button\"\n              text=\"Cancel\"\n              className={s.button}\n              onClick={onCloseForm}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n      {isModalEditOpen && (\n        <form action=\"\" className={s.form} onSubmit={handleEditSubmit}>\n          <label htmlFor=\"\" className={s.label}>\n            name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"input name product\"\n              required\n              onChange={handleEdit}\n              className={s.input}\n            />\n          </label>\n          <div className={s.btnModal}>\n            <button type=\"submit\" text=\"Confirm\" className={s.button}>\n              Edit\n            </button>\n            <button\n              type=\"button\"\n              text=\"Cancel\"\n              className={s.button}\n              onClick={onCloseForm}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ModalProduct;\n","import s from \"./Filter.module.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/products/productsAction\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.products.filter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filter}>\n      <label htmlFor=\"\" className={s.label}>\n        Find product\n        <input\n          type=\"text\"\n          name=\"width\"\n          value={filter}\n          placeholder=\"input name\"\n          required\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n          className={s.input}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import s from \"./Products.module.css\";\nimport { useSelector } from \"react-redux\";\n\nimport { AiOutlineBars } from \"react-icons/ai\";\n\nconst Products = ({ handleBtnChange }) => {\n  const allProducts = useSelector((state) => state.products.items);\n  const filter = useSelector((state) => state.products.filter);\n\n  const allPro = allProducts.filter((product) =>\n    product.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={s.main}>\n      {!allPro.length && alert(\"No products\")}\n      {allProducts.length &&\n        allPro.map(({ name, id, count, weight, hight, width, comments }) => (\n          <li key={id} className={s.maimItem}>\n            <div className={s.item}>\n              <h2 className={s.title}>{name}</h2>\n              <AiOutlineBars\n                onClick={() => handleBtnChange(id)}\n                className={s.icon}\n              />\n            </div>\n            <ul>\n              <li>\n                <p>count: {count}</p>\n              </li>\n              <li>\n                <p>weight: {weight}</p>\n              </li>\n              <li>\n                <p>hight: {hight}</p>\n              </li>\n              <li>\n                <p>width: {width}</p>\n              </li>\n              <li>\n                <p>comments: {comments}</p>\n              </li>\n            </ul>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\n\nimport s from \"./Modal.module.css\";\nimport { useState, useEffect } from \"react\";\n\nconst Modal = ({ onCloseForm, children }) => {\n  useEffect(() => {\n    const onEscPress = (e) => {\n      if (e.code === \"Escape\") {\n        onCloseForm();\n      }\n    };\n\n    window.addEventListener(\"keydown\", onEscPress);\n    return () => {\n      window.removeEventListener(\"keydown\", onEscPress);\n    };\n  }, [onCloseForm]);\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onCloseForm();\n    }\n  };\n\n  return (\n    <div>\n      <div className={s.backdrop} onClick={handleBackdropClick}>\n        <div className={s.modal}>\n          <div>\n            <header className={s.header}>\n              <button\n                type=\"button\"\n                className={s.closeBtn}\n                onClick={onCloseForm}\n                aria-label=\"Close\"\n              >\n                &times;\n              </button>\n            </header>\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport s from \"./ModalChange.module.css\";\n\nconst ModalChange = ({ onDelete, onEdit }) => {\n  return (\n    <div className={s.item}>\n      <button type=\"button\" className={s.btn} onClick={onEdit}>\n        Edit\n      </button>\n      <button type=\"button\" className={s.btn} onClick={onDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ModalChange;\n","import { useContext } from \"react\";\nimport { ThemeContext, themes } from \"context/themecontext\";\nimport css from \"./ThemeSwitcher.module.css\";\n\nconst ThemeSwitcher = () => {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <div className={css.container}>\n      <label className={css.switch}>\n        <input\n          type=\"checkbox\"\n          onChange={toggleTheme}\n          checked={theme === themes.light}\n        />\n        <span className={`${css.slider} ${css.round}`}></span>\n      </label>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useContext } from \"react\";\nimport { ThemeContext, themes } from \"context/themecontext\";\nimport {\n  setProducts,\n  editProduct,\n  deleteProduct,\n} from \"../../redux/products/productsAction\";\nimport ModalProduct from \"../ModalProduct/ModalProduct\";\nimport Filter from \"components/Filter/Filter\";\nimport Products from \"components/Products/Products\";\nimport Modal from \"components/common/Modal/Modal\";\nimport ModalChange from \"components/ModalChange/ModalChange\";\nimport ThemeSwitcher from \"components/common/ThemeSwitcher/ThemeSwitcher\";\nimport * as Api from \"services/Api\";\nimport s from \"./Shop.module.css\";\n\nconst API_ANDPOINT = \"products\";\n\nconst Shop = () => {\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [isChangeFormOpen, setIsChangeFormOpen] = useState(false);\n  const [idChange, setIdChange] = useState(\"\");\n  const [activeProduct, setActiveProduct] = useState(null);\n  const [editProductS, setEditProductS] = useState({});\n\n  const allProducts = useSelector((state) => state.products.items);\n  const dispatch = useDispatch();\n  const { theme } = useContext(ThemeContext);\n\n  /////set////////\n\n  useEffect(() => {\n    const setProducts1 = async () => {\n      const products = await Api.getData(API_ANDPOINT);\n      dispatch(setProducts([...products]));\n    };\n    setProducts1();\n  }, [dispatch]);\n\n  ////////// edit ///////////\n\n  const handleBtnChange = (id) => {\n    setIsChangeFormOpen(true);\n    setIdChange(id);\n  };\n\n  const onEdit = () => {\n    setEditProductS(\n      ...allProducts.filter((newProduct) => newProduct.id === idChange)\n    );\n    setIsChangeFormOpen(false);\n    setIsFormOpen(true);\n  };\n\n  const changeProductName = (changeProd) => {\n    if (editProductS.name === changeProd) return;\n\n    setActiveProduct({ ...editProductS, name: changeProd });\n  };\n\n  useEffect(() => {\n    if (!activeProduct) return;\n\n    const onEditProducts = async () => {\n      const newEditProduct = await Api.editItem(API_ANDPOINT, activeProduct);\n      dispatch(editProduct(newEditProduct));\n    };\n    onEditProducts();\n  }, [activeProduct, dispatch]);\n\n  /////////// Delete //////////\n\n  const onDelete = async () => {\n    const deleteProd = await Api.deleteItem(API_ANDPOINT, idChange);\n    dispatch(deleteProduct(deleteProd));\n    setIsChangeFormOpen(false);\n    setIdChange(\"\");\n  };\n\n  const onCloseChanegForm = () => {\n    setIsChangeFormOpen(false);\n  };\n\n  const toggleForm = () => {\n    setIsFormOpen((prevIsFormopen) => !prevIsFormopen);\n    setEditProductS(\"\");\n    setIsChangeFormOpen(false);\n  };\n\n  const noProducts = !allProducts.length;\n\n  return (\n    <div className={theme === themes.light ? s.lightTheme : s.darkTheme}>\n      <ThemeSwitcher />\n      <button type=\"button\" onClick={toggleForm} className=\"mainBtn\">\n        Add Product\n      </button>\n      {noProducts && <h4 className=\"absence-msg\">No products yet</h4>}\n      {isFormOpen && (\n        <Modal onCloseForm={toggleForm}>\n          <ModalProduct\n            onCloseForm={toggleForm}\n            editProductModal={editProductS}\n            changeProductName={changeProductName}\n          />\n        </Modal>\n      )}\n\n      {allProducts.length > 1 && <Filter />}\n      {allProducts.length > 0 && <Products handleBtnChange={handleBtnChange} />}\n      {isChangeFormOpen && (\n        <Modal onCloseForm={onCloseChanegForm}>\n          <ModalChange onDelete={onDelete} onEdit={onEdit} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Shop;\n","import Shop from \"../Shop/Shop\";\nimport { ThemeContext, themes } from \"context/themecontext\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [theme, setTheme] = useState(themes.light);\n\n  const toggleTheme = () =>\n    setTheme((prevTheme) =>\n      prevTheme === themes.light ? themes.dark : themes.light\n    );\n  console.log(`theme`, theme);\n\n  return (\n    <div>\n      <ThemeContext.Provider value={{ theme, toggleTheme }}>\n        <Shop />\n      </ThemeContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"redux/Store\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}