{"version":3,"sources":["components/FindContacts/FindContacts.module.css","components/Contacts /contacts.module.css","services/Api.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSlice.js","redux/store.js","components/Contacts /Contacts .jsx","components/FindContacts/FindContacts.jsx","components/InputContacts/InputContacts.jsx","components/App/App.jsx","components/common/Loader/loader.jsx","index.js","components/InputContacts/InputContacts.module.css"],"names":["module","exports","BASE_URL","fetchData","path","a","options","fetch","res","ok","json","Promise","reject","Error","statusText","API_ENDPOINT","getContacts","createAsyncThunk","addContact","newContact","endpoint","item","finalOptions","method","body","JSON","stringify","headers","api","editContacts","editContact","id","deleteContacts","deleteId","contactsSlice","createSlice","name","initialState","data","items","loading","error","filter","reducers","changeFilter","state","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","push","indx","findIndex","splice","actions","persistContactsConfig","key","storage","whitelist","blacklist","logger","createLogger","collapsed","getState","action","logEntry","timestamp","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","persistor","persistStore","Contacts","onDaleteCard","map","phone","className","s","type","onClick","btn","FindContacts","useSelector","dispatch","useDispatch","title","find","input","value","onChange","e","target","InputContacts","useState","setName","setPhone","setId","setNewContact","useEffect","contactsOperations","reset","form","onSubmit","preventDefault","some","contact","alert","htmlFor","label","pattern","required","button","App","toLowerCase","includes","idDelete","LoaderB","color","height","width","timeout","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5247512d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"FindContacts_find__372A-\",\"input\":\"FindContacts_input__4fWyi\",\"title\":\"FindContacts_title__-IvSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contacts_item__2tTD7\",\"btn\":\"contacts_btn__3HcCm\"};","const BASE_URL = \"https://61c4aa46f1af4a0017d9972f.mockapi.io\";\n\nconst fetchData = async (path, options = {}) => {\n  const res = await fetch(`${BASE_URL}/${path}`, options);\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst getData = (endpoint, options) => fetchData(endpoint, options);\n\nconst saveItem = (endpoint, item, options = {}) => {\n  const finalOptions = {\n    method: \"POST\",\n    // body: item,\n    body: JSON.stringify(item),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n  return fetchData(endpoint, finalOptions);\n};\n\nconst editItem = (endpoint, item, options = {}) => {\n  const finalOptions = {\n    method: \"PUT\",\n    body: JSON.stringify(item),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    ...options,\n  };\n  return fetchData(`${endpoint}/${item.id}`, finalOptions);\n};\n\nconst deleteItem = (endpoint, id, options = {}) =>\n  fetchData(`${endpoint}/${id}`, { method: \"DELETE\", ...options });\n\nexport { getData, saveItem, editItem, deleteItem };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"services/Api\";\nconst API_ENDPOINT = \"contacts\";\n\nconst getContacts = createAsyncThunk(\"contacts/getContactsStatus\", () =>\n  api.getData(API_ENDPOINT)\n);\n\nconst addContact = createAsyncThunk(\n  \"contacts/addContactsStatus\",\n  (newContact) => api.saveItem(API_ENDPOINT, newContact)\n);\n\nconst editContacts = createAsyncThunk(\n  \"contacts/editContactsStatus\",\n  (editContact) => api.editItem(API_ENDPOINT, editContact)\n);\n\nconst deleteContacts = createAsyncThunk(\n  \"contacts/deleteContactsStatus\",\n  (deleteId) => api.deleteItem(API_ENDPOINT, deleteId)\n);\n\nexport { getContacts, addContact, editContacts, deleteContacts };\n","import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  getContacts,\n  addContact,\n  editContacts,\n  deleteContacts,\n} from \"./contactsOperations\";\n\nconst initialState = {\n  data: {\n    items: [],\n    loading: false,\n    error: null,\n  },\n  filter: \"\",\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  reducers: {\n    changeFilter: (state, { payload }) => {\n      state.filter = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getContacts.pending, (state) => {\n        state.data.loading = true;\n        state.data.error = null;\n      })\n      .addCase(getContacts.fulfilled, (state, { payload }) => {\n        state.data.loading = false;\n        state.data.items = payload;\n      })\n      .addCase(getContacts.rejected, (state, { payload }) => {\n        state.data.loading = false;\n        state.data.error = payload;\n      })\n\n      .addCase(addContact.pending, (state) => {\n        state.data.loading = true;\n        state.data.error = null;\n      })\n      .addCase(addContact.fulfilled, (state, { payload }) => {\n        state.data.loading = false;\n        state.data.items.push(payload);\n      })\n      .addCase(addContact.rejected, (state, { payload }) => {\n        state.data.loading = false;\n        state.data.error = payload;\n      })\n\n      .addCase(editContacts.pending, (state) => {\n        state.data.loading = true;\n        state.data.error = null;\n      })\n      .addCase(editContacts.fulfilled, (state, { payload }) => {\n        state.data.loading = false;\n        const indx = state.data.items.findIndex(\n          (item) => item.id === payload.id\n        );\n        state.data.items[indx] = payload;\n      })\n      .addCase(editContacts.rejected, (state, { payload }) => {\n        state.data.loading = false;\n        state.data.error = payload;\n      })\n\n      .addCase(deleteContacts.pending, (state) => {\n        state.data.loading = true;\n        state.data.error = null;\n      })\n      .addCase(deleteContacts.fulfilled, (state, { payload }) => {\n        state.data.loading = false;\n        const indx = state.data.items.findIndex(\n          (item) => item.id === payload.id\n        );\n        state.data.items.splice(indx, 1);\n      })\n      .addCase(deleteContacts.rejected, (state, { payload }) => {\n        state.data.loading = false;\n        state.data.error = payload;\n      });\n  },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport contactsReducer from \"./contacts/contactsSlice\";\n\nconst persistContactsConfig = {\n  key: \"items\",\n  storage,\n  whitelist: [\"items\"],\n  blacklist: [\"filter\"],\n};\n\nconst logger = createLogger({\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n  timestamp: false,\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistContactsConfig, contactsReducer),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== \"production\",\n  // preloadedState,\n  // enhancers: [reduxBatch],\n});\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import s from \"./contacts.module.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst Contacts = ({ items, onDaleteCard }) => {\n  return (\n    <div>\n      <ul>\n        {items.map(({ name, phone, id }) => (\n          <li key={id} className={s.item}>\n            <p>\n              {name}:{phone}\n            </p>\n            <button\n              type=\"submit\"\n              onClick={() => onDaleteCard(id)}\n              className={s.btn}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  items: PropTypes.array,\n  onDaleteCard: PropTypes.func,\n};\nexport default Contacts;\n","import s from \"./FindContacts.module.css\";\n// import { PropTypes } from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"redux/contacts/contactsSlice\";\n\nconst FindContacts = () => {\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h2 className={s.title}>Contacts</h2>\n\n      <form action=\"\">\n        <label className={s.find}>\n          Finde contacts by name\n          <input\n            type=\"text\"\n            className={s.input}\n            value={filter}\n            onChange={(e) => dispatch(changeFilter(e.target.value))}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default FindContacts;\n","import s from \"./InputContacts.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GiBookCover } from \"react-icons/gi\";\n\nimport { contactsOperations } from \"redux/contacts\";\n\nimport { nanoid } from \"nanoid\";\n\nconst InputContacts = () => {\n  const contacts = useSelector((state) => state.contacts.data.items);\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [newContact, setNewContact] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.addContact(newContact));\n  }, [dispatch, newContact]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (contacts.some((contact) => name === contact.name)) {\n      alert(`${name} is alredy in contact`);\n      return;\n    }\n    setNewContact({ name, phone });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setPhone(\"\");\n    setId(\"\");\n  };\n  return (\n    <div>\n      <h1 className={s.title}>\n        <GiBookCover />\n        Phonebook\n      </h1>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\" className={s.label}>\n          name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <label htmlFor=\"\" className={s.label}>\n          phone\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.button}>\n          add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputContacts;\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport Contacts from \"../Contacts /Contacts \";\nimport FindContacts from \"../FindContacts/FindContacts\";\nimport InputContacts from \"../InputContacts/InputContacts\";\nimport { useEffect } from \"react\";\nimport { contactsOperations } from \"redux/contacts\";\n\nconst { getContacts, deleteContacts } = contactsOperations;\n\nconst App = () => {\n  const contacts = useSelector((state) => state.contacts.data.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  // const error = useSelector((state) => state.contacts.data.error);\n  // const loading = useSelector((state) => state.contacts.data.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const getFilterContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const onDaleteCard = (idDelete) => {\n    dispatch(deleteContacts(idDelete));\n  };\n\n  return (\n    <div className=\"main\">\n      <InputContacts />\n      <FindContacts />\n      <Contacts items={getFilterContacts(filter)} onDaleteCard={onDaleteCard} />\n    </div>\n  );\n};\n\nexport default App;\n","import Loader from \"react-loader-spinner\";\n\nconst LoaderB = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n      class=\"lod\" //3 secs\n    />\n  );\n};\nexport default LoaderB;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { persistor, store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport Loader from \"./components/common/Loader/loader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputContacts_form__GZK3_\",\"label\":\"InputContacts_label__1aefF\",\"button\":\"InputContacts_button__1_9Jn\",\"title\":\"InputContacts_title__3eXMi\"};"],"sourceRoot":""}